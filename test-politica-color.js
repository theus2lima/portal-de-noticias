require('dotenv').config({ path: '.env.local' })

async function testPoliticaColor() {
  try {
    console.log('=== TESTE DE COR DA CATEGORIA POL√çTICA ===\n')
    
    // Simular o que o frontend faz
    const baseUrl = 'http://localhost:3000'
    
    console.log('1. Buscando dados da categoria pol√≠tica...')
    const response = await fetch(`${baseUrl}/api/categories`, {
      headers: {
        'Content-Type': 'application/json'
      }
    })
    
    if (!response.ok) {
      console.error('Erro na API:', response.status, response.statusText)
      return
    }
    
    const data = await response.json()
    const categories = data.data || []
    const politica = categories.find(cat => cat.slug === 'politica' && cat.is_active)
    
    if (!politica) {
      console.error('‚ùå Categoria pol√≠tica n√£o encontrada!')
      return
    }
    
    console.log('‚úÖ Categoria pol√≠tica encontrada:')
    console.log(`   Nome: ${politica.name}`)
    console.log(`   Cor: ${politica.color}`)
    console.log(`   Atualizada: ${politica.updated_at}`)
    
    // Mapear cor para CSS
    const colorMap = {
      '#DC2626': 'bg-gradient-to-br from-red-900 to-red-800',
      '#059669': 'bg-gradient-to-br from-emerald-900 to-emerald-800', 
      '#7C3AED': 'bg-gradient-to-br from-violet-900 to-violet-800',
      '#0EA5E9': 'bg-gradient-to-br from-sky-900 to-sky-800',
      '#3B82F6': 'bg-gradient-to-br from-blue-900 to-blue-800',
      '#D97706': 'bg-gradient-to-br from-amber-900 to-amber-800',
      '#16A34A': 'bg-gradient-to-br from-green-900 to-green-800',
      '#10B981': 'bg-gradient-to-br from-emerald-900 to-emerald-800',
      '#BE185D': 'bg-gradient-to-br from-pink-900 to-pink-800',
      '#7C2D12': 'bg-gradient-to-br from-amber-800 to-amber-900',
      '#374151': 'bg-gradient-to-br from-gray-600 to-gray-700',
      '#1F2937': 'bg-gradient-to-br from-gray-800 to-gray-900',
      '#1E3A8A': 'bg-gradient-to-br from-blue-900 to-blue-800'
    }
    
    const cssClass = colorMap[politica.color] || 'bg-gradient-to-br from-primary-900 to-primary-800'
    
    console.log('\n2. Mapeamento de cor:')
    console.log(`   Cor hex: ${politica.color}`)
    console.log(`   CSS class: ${cssClass}`)
    
    // Verificar se a cor est√° mapeada
    if (colorMap[politica.color]) {
      console.log('‚úÖ Cor est√° mapeada corretamente!')
    } else {
      console.log('‚ùå Cor n√£o est√° no mapeamento - ser√° usado fallback')
    }
    
    // Descrever a cor visualmente
    const colorDescriptions = {
      '#DC2626': 'üî¥ Vermelho (Red)',
      '#059669': 'üü¢ Verde esmeralda (Emerald)', 
      '#7C3AED': 'üü£ Violeta (Violet)',
      '#0EA5E9': 'üîµ Azul c√©u (Sky)',
      '#3B82F6': 'üîµ Azul (Blue)',
      '#D97706': 'üü° √Çmbar (Amber)',
      '#16A34A': 'üü¢ Verde (Green)',
      '#10B981': 'üü¢ Verde esmeralda claro (Light Emerald)',
      '#BE185D': 'ü©∑ Rosa (Pink)',
      '#1E3A8A': 'üîµ Azul escuro (Dark Blue)'
    }
    
    const colorDesc = colorDescriptions[politica.color] || '‚ö´ Cor desconhecida'
    console.log(`   Cor visual: ${colorDesc}`)
    
    console.log('\n=== CONCLUS√ÉO ===')
    if (politica.color === '#16A34A') {
      console.log('‚úÖ A categoria Pol√≠tica tem cor VERDE (#16A34A)')
      console.log('‚úÖ Esta cor est√° mapeada para: bg-gradient-to-br from-green-900 to-green-800')
      console.log('‚úÖ A p√°gina deveria mostrar um fundo verde!')
      
      if (cssClass.includes('green')) {
        console.log('‚úÖ Tudo configurado corretamente!')
      } else {
        console.log('‚ùå Algo est√° errado com o mapeamento!')
      }
    } else {
      console.log(`‚ö†Ô∏è  A categoria Pol√≠tica tem cor ${politica.color}`)
      console.log('   Se voc√™ alterou para verde, a mudan√ßa pode ainda n√£o ter sido aplicada')
    }
    
  } catch (error) {
    console.error('Erro:', error.message)
  }
}

testPoliticaColor()
